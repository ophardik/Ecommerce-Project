{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\Project2\\\\client\\\\src\\\\Components\\\\Signup.js\",\n  _s = $RefreshSig$();\n//  import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Signup = () => {\n//     const [userName, setUserName] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const history = useNavigate();\n\n//     const handleSignup = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const data = {\n//                 userName: userName,\n//                 password: password\n//             }\n//             // Send signup data to the server\n//             const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\n//             console.log(\"Signup successful:\", response.data);\n//             // Redirect to login page after successful signup\n//             history(\"/login\");\n//         } catch (error) {\n//             console.error(\"Error signing up:\", error);\n//             // Check if the error response contains the message indicating the username is already taken\n//             if (error.response.data.msg === \"Username already taken\") {\n//                 setError(\"Username already taken. Please choose a different username.\");\n//             }\n//         }\n//     }\n\n//     return (\n//         <div className=\"signup-container\">\n//             <div className=\"signup-form\">\n//                 <form onSubmit={handleSignup}>\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"userName\" className=\"form-label\">UserName</label>\n//                         <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             id=\"userName\"\n//                             value={userName}\n//                             onChange={(e) => setUserName(e.target.value)}\n//                             aria-describedby=\"userNameHelp\"\n//                         />\n//                         <div id=\"userNameHelp\" className=\"form-text\">We'll never share your userName with anyone else.</div>\n//                     </div>\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"password\" className=\"form-label\">Password</label>\n//                         <input\n//                             type=\"password\"\n//                             className=\"form-control\"\n//                             id=\"password\"\n//                             value={password}\n//                             onChange={(e) => setPassword(e.target.value)}\n//                         />\n//                     </div>\n//                     {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\n//                     <button type=\"submit\" className=\"btn btn-danger\">Signup</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Signup;\n\n// import * as React from 'react';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// // import Link from '@mui/material/Link';\n// // import Grid from '@mui/material/Grid';\n// import Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import Container from '@mui/material/Container';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { useNavigate } from 'react-router-dom';\n\n// const SignIn=()=> {\n//   const [userName, setUserName] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const [dob, setDob] = useState('');\n//     const history = useNavigate();\n\n//   const handleSubmit =async (event) => {\n//     event.preventDefault();\n//     try {\n//       const data = {\n//           userName: userName,\n//           // eslint-disable-next-line no-undef\n//           email: email,\n//       }\n//       const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\n//       console.log(\"Signup successful:\", response.data);\n//       history(\"/login\")\n\n//   //   console.log({\n//   //     email: data.get('email'),\n//   //     password: data.get('password'),\n//   //     username: data.get('username'), // Added username\n//   //     dob: data.get('dob'), // Added DOB\n//     }\n//     catch (error) {\n//       console.error(\"Error signing up:\", error);\n//       // Check if the error response contains the message indicating the username is already taken\n//       if (error.response.data.msg === \"Username already taken\") {\n//           setError(\"Username already taken. Please choose a different username.\");\n//       }\n//   }\n//    };\n\n//   return (\n//     <ThemeProvider theme={createTheme()}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//           }}\n//         >\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n//             <LockOutlinedIcon />\n//           </Avatar>\n//           <Typography component=\"h1\" variant=\"h5\">\n//             Sign in\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n//             <TextField\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\"email\"\n//               label=\"Email Address\"\n//               name=\"email\"\n//               autoComplete=\"email\"\n//               autoFocus\n//             />\n//             <TextField\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\"username\" // Added username field\n//               label=\"Username\"\n//               name=\"username\"\n//               value={userName}\n//               autoComplete=\"username\"\n//               onChange={(event) => setUserName(event.target.value)}\n//             />\n//             <TextField\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               id=\"dob\" // Added DOB field\n//               label=\"Date of Birth\"\n//               name=\"dob\"\n//               type=\"date\"\n//               value={dob}\n//               onChange={(event) => setDob(event.target.value)}\n//               InputLabelProps={{\n//                 shrink: true,\n//               }}\n//             />\n//             <TextField\n//               margin=\"normal\"\n//               required\n//               fullWidth\n//               name=\"password\"\n//               label=\"Password\"\n//               type=\"password\"\n//               id=\"password\"\n//               value={password}\n//               onChange={(event) => setPassword(event.target.value)}\n//               autoComplete=\"current-password\"\n//             />\n//             <FormControlLabel\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\n//               label=\"Remember me\"\n//             />\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2 }}\n//             >\n//               Sign In\n//             </Button>\n//           </Box>\n//         </Box>\n//         {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\n//                     <button type=\"submit\" className=\"btn btn-danger\">Signup</button>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n\n// export default SignIn;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [dob, setDob] = useState('');\n  const navigate = useNavigate(); // Renamed history to navigate\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const data = {\n        userName: userName\n        // email: email, // Assuming email is not used, remove this line\n      };\n      const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\n      console.log(\"Signup successful:\", response.data);\n      navigate(\"/login\"); // Changed history to navigate\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n      if (error.response.data.msg === \"Username already taken\") {\n        setError(\"Username already taken. Please choose a different username.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: createTheme(),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: 'secondary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"username\",\n            label: \"Username\",\n            name: \"username\",\n            value: userName,\n            autoComplete: \"username\",\n            onChange: event => setUserName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"dob\",\n            label: \"Date of Birth\",\n            name: \"dob\",\n            type: \"date\",\n            value: dob,\n            onChange: event => setDob(event.target.value),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: event => setPassword(event.target.value),\n            autoComplete: \"current-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"remember\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 24\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"p3ZAOpwcNNa2C0c1+Sd5ayxRsEg=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","axios","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","useNavigate","jsxDEV","_jsxDEV","SignIn","_s","userName","setUserName","password","setPassword","error","setError","dob","setDob","navigate","handleSubmit","event","preventDefault","data","response","post","console","log","msg","theme","children","component","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","noValidate","mt","margin","required","fullWidth","id","label","name","value","autoComplete","onChange","target","type","InputLabelProps","shrink","control","color","mb","className","role","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/Project2/client/src/Components/Signup.js"],"sourcesContent":["//  import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Signup = () => {\r\n//     const [userName, setUserName] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const history = useNavigate();\r\n\r\n//     const handleSignup = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const data = {\r\n//                 userName: userName,\r\n//                 password: password\r\n//             }\r\n//             // Send signup data to the server\r\n//             const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\r\n//             console.log(\"Signup successful:\", response.data);\r\n//             // Redirect to login page after successful signup\r\n//             history(\"/login\");\r\n//         } catch (error) {\r\n//             console.error(\"Error signing up:\", error);\r\n//             // Check if the error response contains the message indicating the username is already taken\r\n//             if (error.response.data.msg === \"Username already taken\") {\r\n//                 setError(\"Username already taken. Please choose a different username.\");\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"signup-container\">\r\n//             <div className=\"signup-form\">\r\n//                 <form onSubmit={handleSignup}>\r\n//                     <div className=\"mb-3\">\r\n//                         <label htmlFor=\"userName\" className=\"form-label\">UserName</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             id=\"userName\"\r\n//                             value={userName}\r\n//                             onChange={(e) => setUserName(e.target.value)}\r\n//                             aria-describedby=\"userNameHelp\"\r\n//                         />\r\n//                         <div id=\"userNameHelp\" className=\"form-text\">We'll never share your userName with anyone else.</div>\r\n//                     </div>\r\n//                     <div className=\"mb-3\">\r\n//                         <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n//                         <input\r\n//                             type=\"password\"\r\n//                             className=\"form-control\"\r\n//                             id=\"password\"\r\n//                             value={password}\r\n//                             onChange={(e) => setPassword(e.target.value)}\r\n//                         />\r\n//                     </div>\r\n//                     {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n//                     <button type=\"submit\" className=\"btn btn-danger\">Signup</button>\r\n//                 </form>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// // import Link from '@mui/material/Link';\r\n// // import Grid from '@mui/material/Grid';\r\n// import Box from '@mui/material/Box';\r\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import Container from '@mui/material/Container';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const SignIn=()=> {\r\n//   const [userName, setUserName] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const [dob, setDob] = useState('');\r\n//     const history = useNavigate();\r\n\r\n//   const handleSubmit =async (event) => {\r\n//     event.preventDefault();\r\n//     try {\r\n//       const data = {\r\n//           userName: userName,\r\n//           // eslint-disable-next-line no-undef\r\n//           email: email,\r\n//       }\r\n//       const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\r\n//       console.log(\"Signup successful:\", response.data);\r\n//       history(\"/login\")\r\n\r\n//   //   console.log({\r\n//   //     email: data.get('email'),\r\n//   //     password: data.get('password'),\r\n//   //     username: data.get('username'), // Added username\r\n//   //     dob: data.get('dob'), // Added DOB\r\n//     }\r\n//     catch (error) {\r\n//       console.error(\"Error signing up:\", error);\r\n//       // Check if the error response contains the message indicating the username is already taken\r\n//       if (error.response.data.msg === \"Username already taken\") {\r\n//           setError(\"Username already taken. Please choose a different username.\");\r\n//       }\r\n//   }\r\n//    };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={createTheme()}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n        \r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//             alignItems: 'center',\r\n//           }}\r\n//         >\r\n//           <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n//             <LockOutlinedIcon />\r\n//           </Avatar>\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             Sign in\r\n//           </Typography>\r\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n//             <TextField\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               id=\"email\"\r\n//               label=\"Email Address\"\r\n//               name=\"email\"\r\n//               autoComplete=\"email\"\r\n//               autoFocus\r\n//             />\r\n//             <TextField\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               id=\"username\" // Added username field\r\n//               label=\"Username\"\r\n//               name=\"username\"\r\n//               value={userName}\r\n//               autoComplete=\"username\"\r\n//               onChange={(event) => setUserName(event.target.value)}\r\n//             />\r\n//             <TextField\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               id=\"dob\" // Added DOB field\r\n//               label=\"Date of Birth\"\r\n//               name=\"dob\"\r\n//               type=\"date\"\r\n//               value={dob}\r\n//               onChange={(event) => setDob(event.target.value)}\r\n//               InputLabelProps={{\r\n//                 shrink: true,\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               margin=\"normal\"\r\n//               required\r\n//               fullWidth\r\n//               name=\"password\"\r\n//               label=\"Password\"\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               value={password}\r\n//               onChange={(event) => setPassword(event.target.value)}\r\n//               autoComplete=\"current-password\"\r\n//             />\r\n//             <FormControlLabel\r\n//               control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//               label=\"Remember me\"\r\n//             />\r\n//             <Button\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2 }}\r\n//             >\r\n//               Sign In\r\n//             </Button>\r\n//           </Box>\r\n//         </Box>\r\n//         {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n//                     <button type=\"submit\" className=\"btn btn-danger\">Signup</button>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default SignIn;\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [dob, setDob] = useState('');\r\n  const navigate = useNavigate(); // Renamed history to navigate\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        userName: userName,\r\n        // email: email, // Assuming email is not used, remove this line\r\n      }\r\n      const response = await axios.post(\"http://localhost:8002/api/sign-up\", data);\r\n      console.log(\"Signup successful:\", response.data);\r\n      navigate(\"/login\"); // Changed history to navigate\r\n\r\n    } catch (error) {\r\n      console.error(\"Error signing up:\", error);\r\n      if (error.response.data.msg === \"Username already taken\") {\r\n        setError(\"Username already taken. Please choose a different username.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={createTheme()}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={userName}\r\n              autoComplete=\"username\"\r\n              onChange={(event) => setUserName(event.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"dob\"\r\n              label=\"Date of Birth\"\r\n              name=\"dob\"\r\n              type=\"date\"\r\n              value={dob}\r\n              onChange={(event) => setDob(event.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Box>\r\n          {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}