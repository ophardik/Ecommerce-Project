{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hardik\\\\OneDrive\\\\Desktop\\\\Project2\\\\frontend\\\\src\\\\Components\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const [paymentLoading, setPaymentLoading] = useState(false);\n  const handlePayment = async () => {\n    setPaymentLoading(true);\n    try {\n      // Call your backend to create a Razorpay order\n      const response = await axios.post('/create-razorpay-order', {\n        amount: 1000,\n        // Example: 1000 (in paisa)\n        currency: 'INR' // Example: 'INR'\n        // Add any other required parameters\n      });\n      const {\n        order_id,\n        razorpay_key\n      } = response.data;\n      const options = {\n        key: razorpay_key,\n        amount: 1000,\n        // Example: 1000 (in paisa)\n        currency: 'INR',\n        // Example: 'INR'\n        name: 'Your Company Name',\n        description: 'Purchase Description',\n        order_id: order_id,\n        handler: async response => {\n          // Handle the successful payment\n          console.log('Payment success:', response);\n          alert('Payment successful');\n          // Redirect to a thank you page or any other page\n        },\n        prefill: {\n          name: 'Customer Name',\n          email: 'customer@example.com',\n          contact: '+919876543210'\n        },\n        theme: {\n          color: '#528FF0'\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n    } catch (error) {\n      console.error('Error creating Razorpay order:', error);\n      alert('Error processing payment');\n      setPaymentLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please click the button below to make a payment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pay-button\",\n      onClick: handlePayment,\n      disabled: paymentLoading,\n      children: paymentLoading ? 'Processing Payment...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"g9e83Txrq1eLJbktglb44gpVVpc=\");\n_c = PaymentPage;\nexport default PaymentPage;\n/*\r\nkey ID:rzp_test_s381Ggf5XsSGe7\r\nSecret Key:UXHk40q9vNIh7rlX9mnqaTnS\r\n*/\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PaymentPage","_s","paymentLoading","setPaymentLoading","handlePayment","response","post","amount","currency","order_id","razorpay_key","data","options","key","name","description","handler","console","log","alert","prefill","email","contact","theme","color","razorpay","window","Razorpay","open","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hardik/OneDrive/Desktop/Project2/frontend/src/Components/PaymentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// import { loadStripe } from '@stripe/stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst PaymentPage = () => {\r\n  const [paymentLoading, setPaymentLoading] = useState(false);\r\n\r\n  const handlePayment = async () => {\r\n    setPaymentLoading(true);\r\n\r\n    try {\r\n      // Call your backend to create a Razorpay order\r\n      const response = await axios.post('/create-razorpay-order', {\r\n        amount: 1000, // Example: 1000 (in paisa)\r\n        currency: 'INR', // Example: 'INR'\r\n        // Add any other required parameters\r\n      });\r\n\r\n      const { order_id, razorpay_key } = response.data;\r\n\r\n      const options = {\r\n        key: razorpay_key,\r\n        amount: 1000, // Example: 1000 (in paisa)\r\n        currency: 'INR', // Example: 'INR'\r\n        name: 'Your Company Name',\r\n        description: 'Purchase Description',\r\n        order_id: order_id,\r\n        handler: async (response) => {\r\n          // Handle the successful payment\r\n          console.log('Payment success:', response);\r\n          alert('Payment successful');\r\n          // Redirect to a thank you page or any other page\r\n        },\r\n        prefill: {\r\n          name: 'Customer Name',\r\n          email: 'customer@example.com',\r\n          contact: '+919876543210',\r\n        },\r\n        theme: {\r\n          color: '#528FF0',\r\n        },\r\n      };\r\n\r\n      const razorpay = new window.Razorpay(options);\r\n      razorpay.open();\r\n\r\n    } catch (error) {\r\n      console.error('Error creating Razorpay order:', error);\r\n      alert('Error processing payment');\r\n      setPaymentLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <h1>Payment Page</h1>\r\n      <p>Please click the button below to make a payment:</p>\r\n      <button className=\"pay-button\" onClick={handlePayment} disabled={paymentLoading}>\r\n        {paymentLoading ? 'Processing Payment...' : 'Pay Now'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n/*\r\nkey ID:rzp_test_s381Ggf5XsSGe7\r\nSecret Key:UXHk40q9vNIh7rlX9mnqaTnS\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCD,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF;MACA,MAAME,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,wBAAwB,EAAE;QAC1DC,MAAM,EAAE,IAAI;QAAE;QACdC,QAAQ,EAAE,KAAK,CAAE;QACjB;MACF,CAAC,CAAC;MAEF,MAAM;QAAEC,QAAQ;QAAEC;MAAa,CAAC,GAAGL,QAAQ,CAACM,IAAI;MAEhD,MAAMC,OAAO,GAAG;QACdC,GAAG,EAAEH,YAAY;QACjBH,MAAM,EAAE,IAAI;QAAE;QACdC,QAAQ,EAAE,KAAK;QAAE;QACjBM,IAAI,EAAE,mBAAmB;QACzBC,WAAW,EAAE,sBAAsB;QACnCN,QAAQ,EAAEA,QAAQ;QAClBO,OAAO,EAAE,MAAOX,QAAQ,IAAK;UAC3B;UACAY,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEb,QAAQ,CAAC;UACzCc,KAAK,CAAC,oBAAoB,CAAC;UAC3B;QACF,CAAC;QACDC,OAAO,EAAE;UACPN,IAAI,EAAE,eAAe;UACrBO,KAAK,EAAE,sBAAsB;UAC7BC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MAED,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAACf,OAAO,CAAC;MAC7Ca,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDV,KAAK,CAAC,0BAA0B,CAAC;MACjChB,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,oBACEJ,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BhC,OAAA;MAAAgC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpC,OAAA;MAAAgC,QAAA,EAAG;IAAgD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvDpC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAACM,OAAO,EAAEhC,aAAc;MAACiC,QAAQ,EAAEnC,cAAe;MAAA6B,QAAA,EAC7E7B,cAAc,GAAG,uBAAuB,GAAG;IAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClC,EAAA,CA1DID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA4DjB,eAAeA,WAAW;AAC1B;AACA;AACA;AACA;AAHA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}