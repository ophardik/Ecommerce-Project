{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import './Cart.css';\n\n// function AddToCart() {\n//   const [cart, setCart] = useState([]);\n\n//   // Fetch initial cart items from localStorage or sessionStorage\n//   useEffect(() => {\n//     const savedCart = sessionStorage.getItem('cart') || localStorage.getItem('hardikCart');\n//     if (savedCart) {\n//       setCart(JSON.parse(savedCart));\n//     }\n//   }, []);\n\n//   const calculateTotal = () => {\n//     if (cart.length === 0) {\n//       return { subtotal: 0, tax: 0, shipping: 0, total: 0 };\n//     }\n\n//     const subtotal = cart.reduce((acc, item) => acc + (item.price * (item.quantity || 1)), 0);\n//     const tax = subtotal * 0.05;\n//     const shipping = 5.00;\n//     const total = subtotal + tax + shipping;\n//     return { subtotal, tax, shipping, total };\n//   };\n\n//   const updateCartItem = (index, action) => {\n//     const updatedCart = [...cart]; // Create a copy of the cart array\n\n//     if (action === 'add') {\n//       updatedCart[index].quantity = (updatedCart[index].quantity || 1) + 1;\n//     } else if (action === 'remove') {\n//       updatedCart[index].quantity = (updatedCart[index].quantity || 1) - 1;\n//       if (updatedCart[index].quantity <= 0) {\n//         updatedCart.splice(index, 1); // Remove the item from the cart\n//       }\n//     }\n\n//     setCart(updatedCart);\n//     sessionStorage.setItem('cart', JSON.stringify(updatedCart));\n//     localStorage.setItem('hardikCart', JSON.stringify(updatedCart));\n//   };\n\n//   const { subtotal, tax, shipping, total } = calculateTotal();\n\n//   return (\n//     <>\n//       <header id=\"site-header\">\n//         <div className=\"container\">\n//           <h1>Shopping cart</h1>\n//         </div>\n//       </header>\n//       <div className=\"container\">\n//         <section id=\"cart\">\n//           {cart.length === 0 ? (\n//             <div><h1>Your cart is empty</h1></div>\n//           ) : (\n//             cart.map((item, index) => (\n//               <article className=\"product\" key={index}>\n//                 <header>\n//                   <img src={item.url} alt={item.title} />\n//                   <div className=\"remove\">\n//                     <button onClick={() => updateCartItem(index, 'remove')}>Remove product</button>\n//                   </div>\n//                 </header>\n//                 <div className=\"content\">\n//                   <h1>{item.title}</h1>\n//                   <p>{item.description}</p>\n//                   <div className=\"color\" style={{ top: 0 }} />\n//                   <div className=\"type\" style={{ top: 43 }}>{item.category}</div>\n//                 </div>\n//                 <footer className=\"content\">\n//                   <span className=\"qt-minus\" onClick={() => updateCartItem(index, 'remove')}>-</span>\n//                   <span className=\"qt\">{item.quantity || 1}</span>\n//                   <span className=\"qt-plus\" onClick={() => updateCartItem(index, 'add')}>+</span>\n//                   <h2 className=\"full-price\">${item.price}</h2>\n//                   <h2 className=\"price\">${(item.price * (item.quantity || 1)).toFixed(2)}</h2>\n//                 </footer>\n//               </article>\n//             ))\n//           )}\n//         </section>\n//       </div>\n//       <footer id=\"site-footer\">\n//         <div className=\"container clearfix\">\n//           <div className=\"left\">\n//             <h2 className=\"subtotal\">Subtotal: <span>{subtotal.toFixed(2)}</span>$</h2>\n//             <h3 className=\"tax\">Taxes (5%): <span>{tax.toFixed(2)}</span>$</h3>\n//             <h3 className=\"shipping\">Shipping: <span>{shipping.toFixed(2)}</span>$</h3>\n//           </div>\n//           <div className=\"right\">\n//             <h1 className=\"total\">Total: <span>{total.toFixed(2)}</span>$</h1>\n//             <button className=\"btn\">Checkout</button>\n//           </div>\n//         </div>\n//       </footer>\n//     </>\n//   );\n// }\n\n// export default AddToCart;","map":{"version":3,"names":[],"sources":["C:/Users/hardik/OneDrive/Desktop/Project2/frontend/src/Components/AddToCart.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './Cart.css';\r\n\r\n// function AddToCart() {\r\n//   const [cart, setCart] = useState([]);\r\n\r\n//   // Fetch initial cart items from localStorage or sessionStorage\r\n//   useEffect(() => {\r\n//     const savedCart = sessionStorage.getItem('cart') || localStorage.getItem('hardikCart');\r\n//     if (savedCart) {\r\n//       setCart(JSON.parse(savedCart));\r\n//     }\r\n//   }, []);\r\n\r\n//   const calculateTotal = () => {\r\n//     if (cart.length === 0) {\r\n//       return { subtotal: 0, tax: 0, shipping: 0, total: 0 };\r\n//     }\r\n\r\n//     const subtotal = cart.reduce((acc, item) => acc + (item.price * (item.quantity || 1)), 0);\r\n//     const tax = subtotal * 0.05;\r\n//     const shipping = 5.00;\r\n//     const total = subtotal + tax + shipping;\r\n//     return { subtotal, tax, shipping, total };\r\n//   };\r\n\r\n//   const updateCartItem = (index, action) => {\r\n//     const updatedCart = [...cart]; // Create a copy of the cart array\r\n\r\n//     if (action === 'add') {\r\n//       updatedCart[index].quantity = (updatedCart[index].quantity || 1) + 1;\r\n//     } else if (action === 'remove') {\r\n//       updatedCart[index].quantity = (updatedCart[index].quantity || 1) - 1;\r\n//       if (updatedCart[index].quantity <= 0) {\r\n//         updatedCart.splice(index, 1); // Remove the item from the cart\r\n//       }\r\n//     }\r\n\r\n//     setCart(updatedCart);\r\n//     sessionStorage.setItem('cart', JSON.stringify(updatedCart));\r\n//     localStorage.setItem('hardikCart', JSON.stringify(updatedCart));\r\n//   };\r\n\r\n//   const { subtotal, tax, shipping, total } = calculateTotal();\r\n\r\n//   return (\r\n//     <>\r\n//       <header id=\"site-header\">\r\n//         <div className=\"container\">\r\n//           <h1>Shopping cart</h1>\r\n//         </div>\r\n//       </header>\r\n//       <div className=\"container\">\r\n//         <section id=\"cart\">\r\n//           {cart.length === 0 ? (\r\n//             <div><h1>Your cart is empty</h1></div>\r\n//           ) : (\r\n//             cart.map((item, index) => (\r\n//               <article className=\"product\" key={index}>\r\n//                 <header>\r\n//                   <img src={item.url} alt={item.title} />\r\n//                   <div className=\"remove\">\r\n//                     <button onClick={() => updateCartItem(index, 'remove')}>Remove product</button>\r\n//                   </div>\r\n//                 </header>\r\n//                 <div className=\"content\">\r\n//                   <h1>{item.title}</h1>\r\n//                   <p>{item.description}</p>\r\n//                   <div className=\"color\" style={{ top: 0 }} />\r\n//                   <div className=\"type\" style={{ top: 43 }}>{item.category}</div>\r\n//                 </div>\r\n//                 <footer className=\"content\">\r\n//                   <span className=\"qt-minus\" onClick={() => updateCartItem(index, 'remove')}>-</span>\r\n//                   <span className=\"qt\">{item.quantity || 1}</span>\r\n//                   <span className=\"qt-plus\" onClick={() => updateCartItem(index, 'add')}>+</span>\r\n//                   <h2 className=\"full-price\">${item.price}</h2>\r\n//                   <h2 className=\"price\">${(item.price * (item.quantity || 1)).toFixed(2)}</h2>\r\n//                 </footer>\r\n//               </article>\r\n//             ))\r\n//           )}\r\n//         </section>\r\n//       </div>\r\n//       <footer id=\"site-footer\">\r\n//         <div className=\"container clearfix\">\r\n//           <div className=\"left\">\r\n//             <h2 className=\"subtotal\">Subtotal: <span>{subtotal.toFixed(2)}</span>$</h2>\r\n//             <h3 className=\"tax\">Taxes (5%): <span>{tax.toFixed(2)}</span>$</h3>\r\n//             <h3 className=\"shipping\">Shipping: <span>{shipping.toFixed(2)}</span>$</h3>\r\n//           </div>\r\n//           <div className=\"right\">\r\n//             <h1 className=\"total\">Total: <span>{total.toFixed(2)}</span>$</h1>\r\n//             <button className=\"btn\">Checkout</button>\r\n//           </div>\r\n//         </div>\r\n//       </footer>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default AddToCart;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}